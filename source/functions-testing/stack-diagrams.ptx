<section xml:id="functions-testing_stack-diagrams"
         xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Stack Frames</title>

  <p>When running the Codelens tool, it creates a diagram like this one:</p>

  <figure>
    <caption>Stack diagram for doubleValue</caption>
    <image width="25%"
           source="images/doubleValue-stack.jpg"/>
  </figure>

  <p>
    <idx>
      <h>stack diagram</h>
    </idx>
    <idx>
      <h>diagram</h>
      <h>stack</h>
    </idx>
    <idx>
      <h>frame</h>
    </idx> This is known as a <term>stack diagram</term>, which shows the state of
    a program's functions and variables. For each function there is a box, called a <term> frame</term>
    or <term>stack frame</term>, that contains the function's parameters and variables. </p>

  <p>The stack starts in the box for <pf>main</pf>. I can see that at the point we were at in main, <pf>x</pf>
    and <pf>y</pf> have been set, but <pf>z</pf> has not been initialized yet. We have not initialized <pf>z</pf>
    yet, because the <pf>doubleValue</pf> function was called, and now it is executing. There is a stack frame
    for <pf>doubleValue</pf> right below main. It is highlighted in blue to indicate that it is where execution
    currently is.</p>

  <note>
    <p>Depending on the diagram, the stack may grow up or down from main. The ones in Codelens grow
      down from <pf>main</pf>. </p>
  </note>

  <p>As with other memory diagrams, stack diagrams show variables and functions at a particular
    point in time. If you go back and run the program again in Codelens, you will see the stack
    diagram change as the program runs. </p>

  <exercise label="functions-testing_stack-diagrams-ex-0">
    <statement>
      <p>Run the codelens and answer the questions it asks you about the stack diagram.</p>
    </statement>
    <program interactive="codelens">
    <code>
<xi:include href="../../programs/functions-testing/stack-diagram-trace.cpp" parse="text"/>
</code>
    <checkpoint line="10" answer="foo">
      <prompt>What stack frame does <pf>x</pf> belong to at this point? (foo, bar, or main)</prompt>
    </checkpoint>
    <checkpoint line="11" answer="10">
      <prompt>What is the value of x in the current stack frame?</prompt>
    </checkpoint>
    <checkpoint line="17" answer="main">
      <prompt>What stack frame does <pf>x</pf> belong to at this point? (foo, bar, or main)</prompt>
    </checkpoint>
</program>
  </exercise>

</section>