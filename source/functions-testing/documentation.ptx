<section xml:id="functions-testing_documentation" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Documenting Functions</title>

  <p>To preserve their value as abstractions, we should be able to use a function without
  understanding all of the code inside of it. The function prototype gives us some important
  information about how to use the function, but it doesn't tell us everything. For example,
  can you tell how this function works?
  </p>

  <program>
<xi:include href="../../programs/functions-testing/documentation-1.cpp" parse="text"/>
  </program>

  <p>It clearly has something to do with the highest temperature. But what do <pf>start</pf> and
  <pf>range</pf> do? What kind of temperature is it returning? (Fahrenheit? Celsius?)
  </p>

  <p>To use this function, we need to know more about it. Rather than requiring programmers
  to read (and understand) the code of the function to get that information, we can (and should)
  provide it as comments that go with the function. Here is an example of doing so:</p>

  <program line-numbers="yes" highlight-lines="1-8">
<xi:include href="../../programs/functions-testing/documentation-2.cpp" parse="text"/>
  </program>

  <p>
  Lines 1-8 of the sample are all one big comment. This is a <term>block comment</term>, which
  is a comment that can span multiple lines. Block comments start with <pf>/*</pf> (like on line 1) 
  and end with <pf>*/</pf> (like on line 8) Everything between those is a comment - the <pf>*</pf> symbol on each
  line is not actually necessary, it just helps to clearly show what lines are part of the comment.
  <idx><h>block comment</h></idx>
  <idx><h>comment</h><h>block</h></idx>
  </p>

  <p>This particular comment starts with an extra * - <pf>/**</pf>. That extra star doesn't mean anything in
  the C++ language, but it is a convention used to indicate that this comment is a <url href="https://www.doxygen.nl/">Doxygen</url> style comment. Doxygen comments use a structured syntax to provide documentation about functions and other parts
  of a program. Because the information is structured, it can be automatically extracted and used to
  generate documentation in a variety of formats. For example, the comment above could be used to
  generate a web page that describes the function <pf>maxTemperature</pf> in detail or by a text editor to
  provide a popup with information about the function as you are writing code.
  <idx><h>doxygen</h></idx></p>

  <p>The rest of the comment communicates the information needed to correctly use the function:
  <dl>
  <li><title>@brief</title>
  <p>Provides a short description of the function. This should give a high-level
  overview of what the function does.</p>
  </li>
  <li>
    <title>@param</title>
    <p>There should be one of these for each parameter of the function. First is the name of the
    parameter, then a description of what the parameter is for.</p>
  </li>
  <li>
    <title>@return</title>
    <p>Describes what it is the function returns.</p>
  </li>
  </dl>
  </p>

  <p>This is not an exhaustive list of the things that can be documented (there are things like <pf>@author</pf>, <pf>@bug</pf>
  <pf>@example</pf>, etc...). But these are the most critical items. When working on a programming team or in a class, there will likely be conventions for what items need to be included in your documentation.</p>

  <note><p>Many text editors understand Doxygen style comments (or have plugins to do so). You should try
  searching to see what options there are for Doxygen in your favorite editor. That will make it easier
  to write comments in the right format and also make those comments more useful to you.</p></note>

  <p>In addition to documenting those aspects of the function, you can provide a longer description for the function after the @ items. This example does so to provide extra information about how the function does its job and what happens if it cannot:</p>

  <program line-numbers="yes" highlight-lines="1-10">
<xi:include href="../../programs/functions-testing/documentation-3.cpp" parse="text"/>
  </program>

  <note>
    <p>Many functions in this book lack full comments. This is to reduce the amount of text you need to read in each code sample. Each code sample is usually described in the text surrounding it and comments that repeat that description often would just distract from the code.</p>
  </note>

</section>
